# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build CI/CD Docker Hub

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:  
        context: .
        push: true
        tags: hidenxtt2001/social-shop-eureka-service:latest
      
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            REPO_URL="https://github.com/Social-Shop/social-shop-backend-deploy.git"
            LOCAL_DIR="repos/social-shop-backend-deploy"
            if [ ! -d "$LOCAL_DIR" ]; 
            then
              git clone "$REPO_URL" "$LOCAL_DIR"
              echo "Repository cloned successfully."
              
            else
              echo "Repository already exists locally. Pulled latest changes."
            fi

            # Docker compose
            cd "$LOCAL_DIR"
            echo "Move to dir"
            git pull && echo "Git pull finish";
            /scripts/deploy.sh
            
